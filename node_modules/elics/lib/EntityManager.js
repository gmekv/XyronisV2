var _a;
import { PRIVATE as WORLD_PRIVATE } from './World.js';
export const PRIVATE = Symbol('@elics/entity-manager');
export class EntityManager {
    constructor(world) {
        this[_a] = {
            world: null,
            pool: [],
        };
        this[PRIVATE].world = world;
    }
    requestEntityInstance() {
        let entity;
        if (this[PRIVATE].pool.length > 0) {
            entity = this[PRIVATE].pool.pop();
            entity.active = true;
        }
        else {
            const entityPrototype = this[PRIVATE].world[WORLD_PRIVATE].entityPrototype;
            entity = new entityPrototype(this[PRIVATE].world);
        }
        return entity;
    }
    releaseEntityInstance(entity) {
        this[PRIVATE].pool.push(entity);
    }
}
_a = PRIVATE;
//# sourceMappingURL=EntityManager.js.map