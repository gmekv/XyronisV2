import { Query, QueryConfig } from './Query.js';
import { EntityLike } from './Entity.js';
import { QueryManager } from './QueryManager.js';
import { World } from './World.js';
export declare const PRIVATE: unique symbol;
export declare class System {
    static isSystem: boolean;
    static queries: {
        [key: string]: QueryConfig;
    };
    [PRIVATE]: {
        world: World;
        queryManager: QueryManager;
        isPaused: boolean;
        priority: number;
        queries: {
            [key: string]: Query;
        };
    };
    constructor(world: World, queryManager: QueryManager, priority?: number);
    get world(): World;
    get isPaused(): boolean;
    get queries(): {
        [key: string]: Query;
    };
    get priority(): number;
    getEntities(query: Query): EntityLike[];
    init(): void;
    update(_delta: number, _time: number): void;
    play(): void;
    stop(): void;
}
//# sourceMappingURL=System.d.ts.map