!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).Ratk={})}(this,(function(e){"use strict";var t;const s=Symbol("@elics/query");class n{constructor({required:e,excluded:r=[]}){this[t]={requiredComponents:new Set,excludedComponents:new Set,queryId:""},this[s].requiredComponents=new Set(e.map((e=>e.bitmask||0))),this[s].excludedComponents=new Set(r.map((e=>e.bitmask||0))),this[s].queryId=n.generateQueryId(this[s].requiredComponents,this[s].excludedComponents)}static generateQueryId(e,t){return`required:${Array.from(e).reduce(((e,t)=>e|t),0)}|excluded:${Array.from(t).reduce(((e,t)=>e|t),0)}`}static matchesQuery(e,t){const[s,n]=e.split("|"),r=parseInt(s.split(":")[1]),o=parseInt(n.split(":")[1]);return(t&r)===r&&(0===o||(t&o)!==o)}get queryId(){return this[s].queryId}}var r;t=s;const o=Symbol("@elics/system");class i{constructor(e,t,s=0){this[r]={world:null,queryManager:null,isPaused:!1,priority:0,queries:{}},this[o].world=e,this[o].queryManager=t,this[o].priority=s}get world(){return this[o].world}get isPaused(){return this[o].isPaused}get queries(){return this[o].queries}get priority(){return this[o].priority}getEntities(e){return this[o].queryManager.getEntities(e)}init(){}update(e,t){}play(){this[o].isPaused=!1}stop(){this[o].isPaused=!0}}var a;r=o,i.isSystem=!0,i.queries={};const c=Symbol("@elics/component");class h{reset(){}constructor(e,t,s={}){this[a]={componentManager:null,index:null},this[c].componentManager=e,this[c].index=t,Object.assign(this,this.constructor.defaults),Object.assign(this,s)}}var u;a=c,h.bitmask=null,h.defaults={};const m=Symbol("@elics/component-manager");class p{constructor(){this[u]={componentPools:new Map,freeInstances:new Map}}registerComponent(e){this[m].componentPools.set(e.bitmask,[]),this[m].freeInstances.set(e.bitmask,[])}requestComponentInstance(e,t={}){const s=this[m].componentPools.get(e.bitmask),n=this[m].freeInstances.get(e.bitmask);if(!s||!n)throw new Error("Component class not registered");if(n.length>0){const r=s[n.pop()];return Object.assign(r,e.defaults),Object.assign(r,t),r}{const n=new e(this,s.length,t);return s.push(n),n}}releaseComponentInstance(e){const t=e.constructor,s=this[m].componentPools.get(t.bitmask),n=this[m].freeInstances.get(t.bitmask);if(!s||!n)throw new Error("Component class not registered");e.reset(),n.push(e[c].index)}}var y;u=m;const l=Symbol("@elics/entity-manager");class d{constructor(e){this[y]={world:null,pool:[]},this[l].world=e}requestEntityInstance(){let e;if(this[l].pool.length>0)e=this[l].pool.pop(),e.active=!0;else{e=new(0,this[l].world[M].entityPrototype)(this[l].world)}return e}releaseEntityInstance(e){this[l].pool.push(e)}}var g;y=l;const f=Symbol("@elics/query-manager");class w{constructor(){this[g]={queries:new Map}}registerQuery(e){const t=e.queryId;this[f].queries.has(t)||this[f].queries.set(t,new Set)}updateEntity(e){0!==e.componentMask?this[f].queries.forEach(((t,s)=>{const r=n.matchesQuery(s,e.componentMask),o=t.has(e);r&&!o?t.add(e):!r&&o&&t.delete(e)})):this[f].queries.forEach((t=>t.delete(e)))}getEntities(e){const t=e.queryId;if(!this[f].queries.has(t))throw new Error(`Query not registered: ${t}`);return Array.from(this[f].queries.get(t)||[])}}var q;g=f;const M=Symbol("@elics/world");q=M;const E="Cannot modify a destroyed entity",b="Cannot access a destroyed entity";class C{constructor(e){this.componentMask=0,this.active=!0,this.components=new Map,this.entityManager=e[M].entityManager,this.queryManager=e[M].queryManager,this.componentManager=e[M].componentManager}addComponent(e,t={}){if(!this.active)throw new Error(E);if(null!==e.bitmask){this.componentMask|=e.bitmask;const s=this.componentManager.requestComponentInstance(e,t);return this.components.set(e,s),this.queryManager.updateEntity(this),s}throw new Error("Component type not registered")}removeComponent(e){if(!this.active)throw new Error(E);if(null===e.bitmask||!this.components.has(e))throw new Error("Component not found");{const t=this.components.get(e);this.componentManager.releaseComponentInstance(t),this.componentMask&=~e.bitmask,this.components.delete(e),this.queryManager.updateEntity(this)}}hasComponent(e){if(!this.active)throw new Error(b);return this.components.has(e)}getComponent(e){if(!this.active)throw new Error(b);const t=this.components.get(e);return t||null}getComponentTypes(){if(!this.active)throw new Error(b);return Array.from(this.components.keys())}destroy(){if(!this.active)throw new Error(E);this.entityManager.releaseEntityInstance(this),this.active=!1,this.components.forEach((e=>{this.componentManager.releaseComponentInstance(e)})),this.components.clear(),this.componentMask=0,this.queryManager.updateEntity(this)}}e.Component=h,e.Entity=C,e.Query=n,e.System=i,e.World=class{constructor(){this[q]={entityManager:new d(this),queryManager:new w,componentManager:new p,nextComponentTypeId:0,systems:[],entityPrototype:C}}setEntityPrototype(e){this[M].entityPrototype=e}registerComponent(e){const t=1<<this[M].nextComponentTypeId;if(this[M].nextComponentTypeId++,this[M].nextComponentTypeId>=32)throw new Error("Exceeded the maximum number of unique components");return e.bitmask=t,this[M].componentManager.registerComponent(e),this}createEntity(){return this[M].entityManager.requestEntityInstance()}registerSystem(e,t){if(this[M].systems.some((t=>t instanceof e)))throw new Error("System already registered");const s=new e(this,this[M].queryManager,t);Object.entries(e.queries).forEach((([e,t])=>{const r=new n(t);this[M].queryManager.registerQuery(r),s[o].queries[e]=r})),s.init();const r=this[M].systems.findIndex((e=>e[o].priority>s[o].priority));return-1===r?this[M].systems.push(s):this[M].systems.splice(r,0,s),this}unregisterSystem(e){this[M].systems=this[M].systems.filter((t=>!(t instanceof e)))}registerQuery(e){const t=new n(e);return this[M].queryManager.registerQuery(t),this}update(e,t){this[M].systems.forEach((s=>{s[o].isPaused||s.update(e,t)}))}getSystem(e){for(const t of this[M].systems)if(t instanceof e)return t}getSystems(){return[...this[M].systems]}},Object.defineProperty(e,"__esModule",{value:!0})}));
