import { AllOptionalProperties } from '../properties/default.js';
import { Component } from './utils.js';
import { CustomContainerProperties } from '../components/index.js';
export declare class CustomContainer<T = {}> extends Component<T> {
    private mergedProperties?;
    private readonly styleSignal;
    private readonly propertiesSignal;
    private readonly defaultPropertiesSignal;
    private readonly parentContextSignal;
    private readonly unsubscribe;
    constructor(properties?: CustomContainerProperties, defaultProperties?: AllOptionalProperties);
    getComputedProperty<K extends keyof CustomContainerProperties>(key: K): CustomContainerProperties[K] | undefined;
    getStyle(): undefined | Readonly<CustomContainerProperties>;
    setStyle(style: CustomContainerProperties | undefined, replace?: boolean): void;
    setProperties(properties: CustomContainerProperties | undefined): void;
    setDefaultProperties(properties: AllOptionalProperties): void;
    destroy(): void;
}
