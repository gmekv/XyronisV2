import { Object3D, Object3DEventMap } from 'three';
import { AllOptionalProperties } from '../properties/default.js';
import { Component } from './utils.js';
import { ContentProperties, createContent } from '../components/index.js';
export declare class Content<T = {}> extends Component<T> {
    private mergedProperties?;
    private readonly contentContainer;
    private readonly styleSignal;
    private readonly propertiesSignal;
    private readonly defaultPropertiesSignal;
    private readonly contentSubscriptions;
    private readonly parentContextSignal;
    private readonly unsubscribe;
    internals: ReturnType<typeof createContent>;
    constructor(properties?: ContentProperties, defaultProperties?: AllOptionalProperties);
    add(...objects: Object3D<Object3DEventMap>[]): this;
    remove(...objects: Array<Object3D>): this;
    getComputedProperty<K extends keyof ContentProperties>(key: K): ContentProperties[K] | undefined;
    getStyle(): undefined | Readonly<ContentProperties>;
    setStyle(style: ContentProperties | undefined, replace?: boolean): void;
    setProperties(properties: ContentProperties | undefined): void;
    setDefaultProperties(properties: AllOptionalProperties): void;
    destroy(): void;
}
